  My first RIA that i will write about is Google Drive. I use google drive at least daily and take it for granted on how fantastic an application that it is. It feels an though it is a desktop application because it never shows refresh. One of its defining features the the ability to drag and drop. taking this idea further is that it allows many things to be dragged together for mass file movement.<br><br>
	My second RIA is the browser application of Netflix. From the login screen to streaming a movie there is no refresh of the browser. But what makes it outstanding is the streaming without refresh. Something that amazes me with applications like netflix is that it stores your last watched position. I imagine that this is done with constant ajax calls to a database or json style file.	<br><br>
	My third RIA is the online twitter page. The thing that makes this fantastic is the background updates where comments, likes etc are updated it the background of the application. This also works well if you are the one who is liking a post, that is it done and there is not a refresh. It feels just like a desktop application.<br><br>
	A rich internet application is often compared to the design of a desktop application. Reasons why they are compared is the fact that with a desktop application you do not see the code working, what i mean by that is that it runs in the background and the user doesnt see processes happening. This is attempted also with rich internet applications. Using modern techiques joined with html 5 allows the website to do partial refreshes of parts of the site in the background without refreshing the whole page. Writing a webpage this way allows for seemless actions on a page, this creates many new ways to design pages that can allow for what could be like full applications to work on the internet. Examples that i can think of for this is something like google Docs, where a word processing application is running through the internet and seemlessly working even though there is many background refreshes happening. We see this when the application saves your work, everytime typing is done it is instantly send to the server and saved. Having a RIA allows for interactivity, think of how thi makes the internet seem today compared to the internet of yesteryear where it was just boring pages of text and images. One of the advantages of using RIAs is the fact of having more substantial Graphical user interfaces that wouldn't work in a standard website.<br><br>
	The reason that - as Jeff encoraged - i didnt use the website that he recommened for one of our RIAs(pixelr - i think) was because i felt it used outdated internet technologies. Pixelr as an RIA is written in Abode Flash player, a now dead technique. Though from a coding standpoint i could understand the reasoning for not changing it to a newer technique because one assumes it would be a large undertaking. <br> <br>
	Thinking about the tutorial for this week i found it more challenging than expected. Writting ajax, even if i have used it before, in a simplier format took a while to get it to return the correct data to the webpage. The dta was returning from the database through the api but i had issue getting it from the javascript to the html. Eventually i found a website with a helping hand. 